# -*- coding: utf-8 -*-
"""LVADSUSR78_BPA_final-Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WfzB4LF9BM7VxpRcWkhPBIGzVwPSo3oF
"""

#2

import warnings
warnings.filterwarnings("ignore")
import pandas as pd
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt
df = pd.read_csv('/content/auto-mpg.csv')
df.head()

# info about data
df.info()

#here we have some null value so we will use a function to fill the null value
df.isnull().sum()
df = df.fillna(method='ffill')

# finding outliers
plt.boxplot(df['displacement'])

# finding outliers for weight
plt.boxplot(df['weight'])

plt.xlabel('mpg')
plt.ylabel('displacement')
plt.scatter(df.mpg,df.displacement,color='red',marker='*')


X = df.drop(['car name','mpg','origin','model year','horsepower'],axis='columns')

y = df.mpg

# model building
from sklearn.model_selection import train_test_split

# splitting train, test data
X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=42,test_size=0.3)

model=linear_model.LinearRegression()

model.fit(X_train,y_train)

predictions=model.predict(X_test)
print(predictions)


# performance metrics
from sklearn.metrics import mean_squared_error,mean_absolute_error
import numpy as np


print("MEan_squared_error")
print(mean_squared_error(predictions,y_test))
print('\n')
print("Mean absolute error")
print(mean_absolute_error(predictions,y_test))
print('\n')
print("Root Mean squared error :")
print(np.sqrt(mean_squared_error(predictions,y_test)))