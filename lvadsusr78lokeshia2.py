# -*- coding: utf-8 -*-
"""LVADSUSR78LokeshIA2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qsigOtaxBp-r9TXmg-cw9OknngNrZsDt
"""

import pandas as pd
df=pd.DataFrame({'A':[1,2,3,4,5]})

#10
Sales_data = pd.DataFrame({'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Homegoods'],
                           'SalesPerson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
                           'Sales': [70000, 50000, 30000, 40000, 60000]})
filtered_data = Sales_data.groupby(['Department', 'SalesPerson']).agg({'Sales':'mean'}).reset_index()
filtered_data.rename(columns={'Sales':'AverageSales'})
filtered_data

result = pd.DataFrame(filtered_data.groupby('Department')['Sales'].mean())
result

#9
employee_data = pd.DataFrame({'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
                              'Department': ['HR', 'IT', 'Finance', 'IT'],
                              'Manager': ['John', 'Rachel', 'Emily', 'Rachel']})
project_data = pd.DataFrame({'Employee' :['Alice', 'Charlie', 'Eve'],
                             'Project': ['P1', 'P3', 'P2']})
aligned_data = pd.merge(employee_data, project_data, on='Employee', how='left')
aligned_data['Project'].fillna('No Project', inplace=True)
aligned_data

#8
supermarket_data = pd.DataFrame({'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
                                 'Category': ['Fruit', 'Fruit', 'Fruit','Fruit', 'Fruit', 'Bakery', 'Fruit' ],
                                 'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
                                 'Promotion': [True, False, True, True, False, True, False]})
avg_price = supermarket_data.loc[supermarket_data['Category']=='Fruit', 'Price'].mean()

result=supermarket_data[(supermarket_data['Category']=='Fruit') & (supermarket_data['Price']>=avg_price) & (supermarket_data['Promotion']==False)]
print("Products that are above avg price and not part of promotion ")
result

#7
data = pd.DataFrame({'Name':['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
                     'Age':[25, 30, 35, 40, 45, 50, 55],
                     'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Pheonix', 'Miami', 'Boston'],
                     'Department':['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']})

result = data[(data['Age']<45) & (data['Department']!='HR')]
result.loc[:, ['Name', 'City']]

#6
import numpy as np
climate_data = np.array([[1,2,3,4,5,6,7,8,9,10,11,12],[11,22,33,44,55,66,77,88,99,10,12,13]])
recaliber = np.array([9,8,7,6,5,4,3,2,1,10,11,12])

def clilmate(climate_data,recaliber ):
  print(climate_data, recaliber)
clilmate(climate_data, recaliber)

#5
scores = np.array([[45,32,-1,67], [87,-1,97,65]])
scores = np.where(scores==-1,0, scores)
np.mean(scores[:, -3:])

#4
performance = np.array([[23,12,34,54], [12,43,32,12]])
print(np.corrcoef(performance))

#3
data = np.array([[1,2,3,4], [4,6,7,3], [4,7,8,6]])
flatten_data = data.flatten()
reshaped_data = flatten_data.reshape(3, 4)
print(flatten_data)
print(reshaped_data)

#2
data = np.array([[23,12,34,54], [12,43,32,12]])
mean_ = np.mean(data)
std_ = np.std(data)


print(mean_)
print(std_)

#1
rgb_image = np.array([[[255,0,0], [0,255,0], [0,0,255]],
                      [[255, 255, 0], [255, 0, 255], [0, 255, 255]],
                      [[127,127, 127], [200, 200, 200], [50, 50, 50]]])
rgb_image
def f1(l):
  for i in l:
    result = (0.2989* l[i])+(l[i]*0.5870)+(0.1140*l[i])
  return result
j=k=0
for i in rgb_image:
  print(f1(i[j][k]))
  j=j+1
  k=k+1