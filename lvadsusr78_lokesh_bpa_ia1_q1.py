# -*- coding: utf-8 -*-
"""LVADSUSR78-Lokesh-BPA-IA1-Q1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ftn9_sn309xlLzcJjH2tzt4Xac2_fFrH
"""

from google.colab import drive
drive.mount('/content/drive')

#1
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics


data = pd.read_csv("/content/drive/MyDrive/expenses.csv")
# data.info()

# Null values handling
print("Null Values: ", data.isnull().sum())
data = data.dropna()

# Outliers handling
plt.boxplot(data['bmi'])
plt.title("Before")
plt.xlabel("bmi")
plt.show()

data = data[data['bmi']<=47]

plt.boxplot(data['bmi'])
plt.title("After")
plt.xlabel("bmi")
plt.show()


# encoding
encoder = LabelEncoder()
data['sex'] = encoder.fit_transform(data['sex'])
data['smoker'] = encoder.fit_transform(data['smoker'])
data['region'] = encoder.fit_transform(data['region'])
data.head()


# duplicates handling
data.drop_duplicates()


# splitting
x = data.drop(['charges'], axis=1)
y = data['charges']
x_train, x_test, y_train, y_test = train_test_split(x, y, random_state = 42, test_size=0.2)

# model building
model = LinearRegression()
model.fit(x_train, y_train)
y_pred = model.predict(x_test)



plt.scatter(data['bmi'], data['charges'])
plt.title("Regression between bmi vs charges")
plt.xlabel("BMI")
plt.ylabel("Charges")
plt.show()


# performance
print("Linear Regression Performance Metrics :")
print("Mean Square Error is : ",metrics.mean_squared_error(y_pred,y_test))
print("r2_Score is  : ",metrics.r2_score(y_pred,y_test))
print("Root Mean Square Error is  : ",np.sqrt(metrics.mean_squared_error(y_pred,y_test)))