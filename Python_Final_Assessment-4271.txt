# -*- coding: utf-8 -*-
"""LVADSUSR78-Lokesh-FA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pqfbv2N4F6Zqq6tT52Y8Y9lBDk2niNTi
"""

from google.colab import drive
drive.mount('/content/drive')

#1
import pandas as pd
data = pd.read_excel('/content/drive/MyDrive/Walmart_Dataset Python_Final_Assessment.xlsx')
data.head()
data.info()
data.describe()

#2
count_null = data.isnull().sum().sum()
count_duplicates = data.duplicated().sum()
print("There are no null values :", count_null)
print("duplicated rows count : ", count_duplicates)

#3
print("Measurements of the Dataset")
data.describe()

#4
from matplotlib import pyplot as plt
_df_2['Profit'].plot(kind='hist', bins=20, title='Profit')
plt.gca().spines[['top', 'right',]].set_visible(False)

#4
from matplotlib import pyplot as plt
_df_7['Profit'].plot(kind='line', figsize=(8, 4), title='Profit')
plt.gca().spines[['top', 'right']].set_visible(False)

#4
from matplotlib import pyplot as plt
_df_3.plot(kind='scatter', x='Sales', y='Quantity', s=32, alpha=.8)
plt.title("Scatter plot relation between Sales and Quantity")
plt.gca().spines[['top', 'right',]].set_visible(False)

#4
from matplotlib import pyplot as plt
_df_0['Sales'].plot(kind='hist', bins=20, title='Sales')
plt.gca().spines[['top', 'right',]].set_visible(False)

#5
corr_Sales_profit = data['Sales'].corr(data['Profit'])
corr_Sales_quantity = data['Sales'].corr(data['Quantity'])
print("Correlation between Sales and Profit :", corr_Sales_profit)
print("Correlation between Sales and Quantity :", corr_Sales_quantity)

# Correlation  between Sales and Profit is Strong, means there is effect on profit , when sales increses.
# Correlation between Sales and Quantity is week, means there is not much effect on quantity
#when sales either increase or decrease

#6
data
plt.figure(figsize=(15, 7))
plt.boxplot(data['Profit'], notch=True, showbox=True)
plt.boxplot(data['Sales'], notch=True, showbox=True)
plt.boxplot(data['Quantity'], notch=True, showbox=True)
plt.title("Detecting outliers in the dataset")
plt.show()

#4
from matplotlib import pyplot as plt
data.plot(kind='scatter', x='Quantity', y='Profit', s=32, alpha=.8)
plt.title("Scatter plot relation between Quantity and Profit")
plt.gca().spines[['top', 'right',]].set_visible(False)

#trend analysis
#1
import matplotlib.pyplot as plt

plt.figure(figsize=(15,7))
plt.plot(data['Order Date'], data['Sales'], marker='o')
plt.plot(data['Order Date'], data['Profit'], marker='o')
plt.xticks()
plt.show()

#trend Analysis
#2
data['total sales'] = data['Sales']* data['Quantity']
data['total sales']
filter = data.groupby( 'Category').agg({'total sales': 'sum'}).reset_index()
result = filter[filter['total sales']==filter['total sales'].max()]
plt.figure(figsize=(20, 10))
plt.bar(filter['Category'], filter['total sales'], color='skyblue')
plt.title('Category wise Sales Over Years')
plt.xlabel("Category")
plt.ylabel("Sales")
plt.show()

# customer analysis
#1
filter = data.groupby('EmailID').agg({'EmailID':'count', 'total sales':'sum'})
filter.rename(columns={'EmailID': 'Order Count'}, inplace=True)
print("Top 5 Customers with High Sales amount and High Order Count")
filter[(filter['total sales']>43000) & (filter['Order Count']>=3)]

#customer analysis
#2
filter = data.groupby('EmailID').agg({'EmailID':'count'})
filter = filter.rename(columns={'EmailID':'order count'})
filter

#comprehensive analysis
#2
filter = data.groupby('Geography').agg({'total sales':'sum'}).reset_index()
filter
# _df_13['total sales'].plot(kind='hist', bins=20, title='total sales')
# plt.gca().spines[['top', 'right',]].set_visible(False)

# By this we can be able to see only some of the cities in the us are
# spending huge sales amount
# So, we can spend our marketing money into mainly those cities
# and also we can shift our focus to cities where sales is less, for changing marketing strategy
# we can also increase out prodcution in these cities with high order count

#comprehensive analysis
#3
# To find Hihg Value Customers we are filtering all the customers
# whose sales amount high and whose order count is high compared to other customers
# So, i want to give priority to those customers with great Sales amount at the same time high order count.
filter = data.groupby('EmailID').agg({'total sales':'sum', 'EmailID':'count'})
filter.rename(columns={'EmailID':'Order count'})
print('High value customer Information')
result = filter[(filter['total sales']>=20000) & (filter['EmailID']>=10)]
result = result.rename(columns={'EmailID':'Order count'})
result

#comprehensive analysis
#1
_df_17.plot(kind='scatter', x='total sales', y='Order count', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)
# we can say that most of the customers lie in between order counts (0,10) and
# spending amount between (0,10000)
# by inferencing this we can improve our sales by inventing products whose price is medium.
# only limited people are interested to buy costly products.
# So, we can increase our production on small to medium price products.